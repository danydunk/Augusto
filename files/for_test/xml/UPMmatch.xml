<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<instance_GUI_pattern>
    <GUI_pattern>CRUD</GUI_pattern>
    <windows>
        <instance_window instance_id="w2" pattern_id="initial">
            <mapping>
                <pattern>paw1</pattern>
                <instance>aw20</instance>
            </mapping>
            <mapping>
                <pattern>paw3</pattern>
                <instance>aw21</instance>
            </mapping>
            <mapping>
                <pattern>paw4</pattern>
                <instance>aw22</instance>
            </mapping>
            <mapping>
                <pattern>psw1</pattern>
                <instance>sw1</instance>
            </mapping>
        </instance_window>
        <instance_window instance_id="w8" pattern_id="form">
            <mapping>
                <pattern>paw5</pattern>
                <instance>aw62</instance>
            </mapping>
            <mapping>
                <pattern>paw6</pattern>
                <instance>aw63</instance>
            </mapping>
            <mapping>
                <pattern>piw1</pattern>
                <instance>iw17</instance>
            </mapping>
            <mapping>
                <pattern>piw1</pattern>
                <instance>iw18</instance>
            </mapping>
            <mapping>
                <pattern>piw1</pattern>
                <instance>iw20</instance>
            </mapping>
            <mapping>
                <pattern>piw1</pattern>
                <instance>iw19</instance>
            </mapping>
            <mapping>
                <pattern>piw1</pattern>
                <instance>iw21</instance>
            </mapping>
            <mapping>
                <pattern>piw1</pattern>
                <instance>iw22</instance>
            </mapping>
        </instance_window>
    </windows>
    <semantics>open util/ordering [Time] as T&#13;
open util/ternary&#13;
open util/relation&#13;
sig Time { }&#13;
abstract sig Operation { }&#13;
sig Click extends Operation {&#13;
	clicked: Action_widget,&#13;
}&#13;
sig Fill extends Operation {&#13;
	filled: Input_widget,&#13;
	with: lone Value,&#13;
}&#13;
sig Select extends Operation {&#13;
	wid: Selectable_widget,&#13;
	which: Object,&#13;
}&#13;
one sig Track {&#13;
	op: Operation lone -&gt; Time,&#13;
}&#13;
abstract sig Window {&#13;
	aws: set Action_widget,&#13;
	iws: set Input_widget,&#13;
	sws: set Selectable_widget,&#13;
}&#13;
abstract sig Action_widget {&#13;
	goes: set Window,&#13;
}&#13;
sig Value { }&#13;
one sig Option_value_0 extends Value { }&#13;
one sig Option_value_1 extends Value { }&#13;
one sig Option_value_2 extends Value { }&#13;
one sig Option_value_3 extends Value { }&#13;
one sig Option_value_4 extends Value { }&#13;
abstract sig Input_widget {&#13;
	content: Value lone -&gt; Time,&#13;
}&#13;
sig Object {&#13;
	appeared: Time,&#13;
}&#13;
abstract sig Selectable_widget {&#13;
	list: Object -&gt; Time,&#13;
	selected: Object lone -&gt; Time,&#13;
}&#13;
one sig Current_window {&#13;
	is_in: Window one -&gt; Time,&#13;
}&#13;
abstract sig Ok extends Action_widget { }&#13;
abstract sig Cancel extends Action_widget { }&#13;
abstract sig Create_trigger extends Action_widget { }&#13;
abstract sig Update_trigger extends Action_widget { }&#13;
abstract sig Delete_trigger extends Action_widget { }&#13;
abstract sig Crud_op { }&#13;
one sig CREATE extends Crud_op { }&#13;
one sig UPDATE extends Crud_op { }&#13;
one sig Current_crud_op {&#13;
	operation: Crud_op lone -&gt; Time,&#13;
}&#13;
one sig Property_semantic {&#13;
	uniques: set Input_widget,&#13;
	requireds: set Input_widget,&#13;
}&#13;
sig Object_inlist extends Object {&#13;
	vs: Value lone -&gt; Input_widget,&#13;
}&#13;
one sig Window_w2 extends Window { }&#13;
one sig Window_w8 extends Window { }&#13;
one sig Action_widget_aw20 extends Create_trigger { }&#13;
one sig Action_widget_aw21 extends Update_trigger { }&#13;
one sig Action_widget_aw22 extends Delete_trigger { }&#13;
one sig Selectable_widget_sw1 extends Selectable_widget { }&#13;
one sig Input_widget_iw17 extends Input_widget { }&#13;
one sig Input_widget_iw18 extends Input_widget { }&#13;
one sig Input_widget_iw20 extends Input_widget { }&#13;
one sig Input_widget_iw19 extends Input_widget { }&#13;
one sig Input_widget_iw21 extends Input_widget { }&#13;
one sig Input_widget_iw22 extends Input_widget { }&#13;
one sig Action_widget_aw62 extends Ok { }&#13;
one sig Action_widget_aw63 extends Cancel { }&#13;
fact fact1{&#13;
	all iw: Input_widget | iw in Window.iws&#13;
	all aw: Action_widget | aw in Window.aws&#13;
	all sw: Selectable_widget | sw in Window.sws&#13;
	//all o: Object | some t: Time | o in Selectable_widget.list.t&#13;
&#13;
}&#13;
fact fact2{&#13;
	no t: Time |  #Track.op.t = 1 and Track.op.t in Fill and Track.op.t.with = Track.op.t.filled.content.(T/prev[t])&#13;
&#13;
}&#13;
fact fact3{&#13;
	#Ok &lt; 2&#13;
	#Selectable_widget = 1&#13;
	all iw: Input_widget | #iw.content.(T/first) = 1 =&gt; not(iw in Property_semantic.requireds)&#13;
&#13;
}&#13;
fact windows_number{&#13;
	#Window = 2&#13;
&#13;
}&#13;
fact Window_w2_iws{&#13;
	Window_w2.iws = none&#13;
&#13;
}&#13;
fact Window_w2_aws{&#13;
	Window_w2.aws = Action_widget_aw20 + Action_widget_aw21 + Action_widget_aw22&#13;
	Action_widget_aw20.goes = Window_w8&#13;
	Action_widget_aw21.goes = Window_w8&#13;
	Action_widget_aw22.goes = Window_w2&#13;
&#13;
}&#13;
fact Window_w2_sws{&#13;
	Window_w2.sws = Selectable_widget_sw1&#13;
&#13;
}&#13;
fact Window_w8_iws{&#13;
	Window_w8.iws = Input_widget_iw17 + Input_widget_iw18 + Input_widget_iw20 + Input_widget_iw19 + Input_widget_iw21 + Input_widget_iw22&#13;
	#Input_widget_iw17.content.(T/first) = 0&#13;
	#(filled.Input_widget_iw17.with &amp; (Option_value_0+Option_value_1+Option_value_2+Option_value_3+Option_value_4)) = 0&#13;
	#Input_widget_iw18.content.(T/first) = 0&#13;
	#(filled.Input_widget_iw18.with &amp; (Option_value_0+Option_value_1+Option_value_2+Option_value_3+Option_value_4)) = 0&#13;
	filled.Input_widget_iw20.with in (Option_value_0+Option_value_1)&#13;
	Input_widget_iw20.content.(T/first) = Option_value_1&#13;
	#Input_widget_iw19.content.(T/first) = 0&#13;
	#(filled.Input_widget_iw19.with &amp; (Option_value_0+Option_value_1+Option_value_2+Option_value_3+Option_value_4)) = 0&#13;
	#Input_widget_iw21.content.(T/first) = 0&#13;
	#(filled.Input_widget_iw21.with &amp; (Option_value_0+Option_value_1+Option_value_2+Option_value_3+Option_value_4)) = 0&#13;
	#Input_widget_iw22.content.(T/first) = 0&#13;
	#(filled.Input_widget_iw22.with &amp; (Option_value_0+Option_value_1+Option_value_2+Option_value_3+Option_value_4)) = 0&#13;
&#13;
}&#13;
fact Window_w8_aws{&#13;
	Window_w8.aws = Action_widget_aw62 + Action_widget_aw63&#13;
	Action_widget_aw62.goes = Window_w2&#13;
	Action_widget_aw63.goes = Window_w2&#13;
&#13;
}&#13;
fact Window_w8_sws{&#13;
	Window_w8.sws = none&#13;
&#13;
}&#13;
fact values_constraints{ }&#13;
fact semantic_property{&#13;
	one Property_semantic_0:Property_semantic|Property_semantic = (Property_semantic_0) and Property_semantic_0.uniques = (Input_widget_iw17) and #Property_semantic_0.requireds = 0&#13;
&#13;
}&#13;
pred transition [t, t': Time] {&#13;
	(one aw: Action_widget, c: Click | click [aw, t, t', c]) or&#13;
	(one iw: Input_widget, v: Value, f: Fill| fill [iw, t, t', v, f]) or&#13;
	(one iw: Input_widget, f: Fill| fill [iw, t, t', none, f]) or&#13;
	(one sw: Selectable_widget, s: Select, o: Object | select [sw, t, t', o, s])&#13;
}&#13;
pred System [] {&#13;
	init [T/first]&#13;
	all t: Time - T/last | transition [t, T/next[t]]&#13;
}&#13;
pred click [aw: Action_widget, t, t': Time, c: Click] {&#13;
	--- precondition ---&#13;
	aw in Current_window.is_in.t.aws&#13;
	click_pre [aw, t]&#13;
	--- effect ---&#13;
	(click_semantics [aw, t] and click_success_post [aw, t, t']) or&#13;
	(not click_semantics  [aw, t] and Current_window.is_in.t' = Current_window.is_in.t and click_fail_post [aw, t, t'])&#13;
	--- operation is tracked ---&#13;
	c.clicked = aw and Track.op.t' = c&#13;
}&#13;
pred fill [iw: Input_widget, t, t': Time, v: Value, f: Fill] {&#13;
	--- precondition ---&#13;
	iw in Current_window.is_in.t.iws&#13;
	fill_pre [iw, t, v]&#13;
	--- effect ---&#13;
	(fill_semantics  [iw, t, v] and iw.content.t' = v and fill_success_post [iw, t, t', v]) or&#13;
	(not fill_semantics  [iw, t, v] and iw.content.t' = iw.content.t and fill_fail_post [iw, t, t', v])&#13;
	--- general postcondition ---&#13;
	Current_window.is_in.t' = Current_window.is_in.t&#13;
	all iww: (Input_widget - iw) | iww.content.t' = iww.content.t&#13;
	all sw:Selectable_widget | sw.selected.t' = sw.selected.t and sw.list.t' = sw.list.t&#13;
	--- operation is tracked ---&#13;
	f.filled = iw and f.with = v and Track.op.t' = f&#13;
}&#13;
pred select [sw: Selectable_widget, t, t': Time, o: Object, s: Select] {&#13;
	--- precondition ---&#13;
	sw in Current_window.is_in.t.sws&#13;
	o in sw.list.t&#13;
	select_pre [sw, t, o]&#13;
	--- effect ---&#13;
	(select_semantics  [sw, t, o] and sw.selected.t' = o and select_success_post [sw, t, t', o]) or&#13;
	(not select_semantics  [sw, t, o] and sw.selected.t' = sw.selected.t and select_fail_post [sw, t, t', o])&#13;
	--- general postcondition ---&#13;
	Current_window.is_in.t' = Current_window.is_in.t&#13;
	all sww: (Selectable_widget - sw) | sww.selected.t' = sww.selected.t and sww.list.t' = sww.list.t&#13;
	sw.list.t' = sw.list.t	--- operation is tracked ---&#13;
	s.wid = sw and s.which = o and Track.op.t' = s&#13;
}&#13;
pred init [t: Time] {&#13;
	no Selectable_widget.list.t&#13;
	no Track.op.t&#13;
	no Selectable_widget.selected.t&#13;
	Current_window.is_in.t = sws.Selectable_widget&#13;
	#Create_trigger = 0 =&gt;Current_crud_op.operation.t = CREATE else #Current_crud_op.operation.t = 0&#13;
}&#13;
pred fill_semantics [iw: Input_widget, t: Time, v: Value] {&#13;
	&#13;
}&#13;
pred fill_success_post [iw: Input_widget, t, t': Time, v: Value] {&#13;
	Current_crud_op.operation.t' = Current_crud_op.operation.t&#13;
}&#13;
pred fill_fail_post [iw: Input_widget, t, t': Time, v: Value] {&#13;
	Current_crud_op.operation.t' = Current_crud_op.operation.t&#13;
}&#13;
pred fill_pre [iw: Input_widget, t: Time, v: Value] {&#13;
	#iw.content.(T/first) = 1 =&gt; not(v = none)&#13;
}&#13;
pred select_semantics [sw: Selectable_widget, t: Time, o: Object] {&#13;
	&#13;
}&#13;
pred select_fail_post [sw: Selectable_widget, t, t': Time, o: Object] {&#13;
	Current_crud_op.operation.t' = Current_crud_op.operation.t&#13;
	all iw: Input_widget | iw.content.t' = iw.content.t&#13;
}&#13;
pred select_success_post [sw: Selectable_widget, t, t': Time, o: Object] {&#13;
	#Create_trigger = 0 =&gt; (Current_crud_op.operation.t' = UPDATE and load_form[o, t'])  else (#Current_crud_op.operation.t' = 0 and all iw: Input_widget | iw.content.t' = iw.content.t)&#13;
}&#13;
pred select_pre [sw: Selectable_widget, t: Time, o: Object] {&#13;
	o in sw.list.t&#13;
}&#13;
pred click_semantics [aw: Action_widget, t: Time] {&#13;
	(aw in Ok and Current_crud_op.operation.t in CREATE) =&gt; filled_required_test [t] and unique_test [t]&#13;
	(aw in Ok and Current_crud_op.operation.t in UPDATE) =&gt; filled_required_test [t] and unique_for_update_test [t]&#13;
}&#13;
pred click_success_post [aw: Action_widget, t, t': Time] {&#13;
	Current_window.is_in.t' = aw.goes&#13;
	(aw in Create_trigger) =&gt; (Current_crud_op.operation.t' = CREATE and Selectable_widget.list.t' = Selectable_widget.list.t and (all iw: Input_widget | iw.content.t' = iw.content.(T/first)) and #Selectable_widget.selected.t' = 0)&#13;
	(aw in Update_trigger) =&gt; (Current_crud_op.operation.t' = UPDATE and Selectable_widget.list.t' = Selectable_widget.list.t and load_form[Selectable_widget.selected.t, t']  and Selectable_widget.selected.t' = Selectable_widget.selected.t)&#13;
	(aw in Delete_trigger) =&gt; (#Selectable_widget.selected.t' = 0 and delete [t, t'])&#13;
	(aw in Delete_trigger and #Create_trigger = 0) =&gt; (Current_crud_op.operation.t' = CREATE  and (all iw: Input_widget | iw.content.t' = iw.content.(T/first)))&#13;
	(aw in Delete_trigger and #Create_trigger &gt; 0) =&gt; (#Current_crud_op.operation.t' = 0  and (all iw: Input_widget | iw.content.t' = iw.content.(T/first)))&#13;
	&#13;
	(aw in Cancel and #Create_trigger &gt; 0) =&gt; (#Current_crud_op.operation.t' = 0 and Selectable_widget.list.t' = Selectable_widget.list.t and #Selectable_widget.selected.t' = 0)&#13;
	(aw in Cancel and #Create_trigger = 0) =&gt; (Current_crud_op.operation.t' = CREATE and Selectable_widget.list.t' = Selectable_widget.list.t and #Selectable_widget.selected.t' = 0  and (all iw: Input_widget | iw.content.t' = iw.content.(T/first)))&#13;
	&#13;
	(aw in Ok and Current_crud_op.operation.t in CREATE) =&gt; (#Selectable_widget.selected.t' = 0 and add [t, t'])&#13;
	(aw in Ok and Current_crud_op.operation.t in UPDATE) =&gt; (#Selectable_widget.selected.t' = 0 and update [t, t'])&#13;
	(aw in Ok and #Create_trigger &gt; 0) =&gt; (#Current_crud_op.operation.t' =0)&#13;
	(aw in Ok and #Create_trigger = 0) =&gt; (Current_crud_op.operation.t' =CREATE  and (all iw: Input_widget | iw.content.t' = iw.content.(T/first)) and #Selectable_widget.selected.t' = 0)&#13;
}&#13;
pred click_fail_post [aw: Action_widget, t, t': Time] {&#13;
	Selectable_widget.list.t' = Selectable_widget.list.t&#13;
	(all iw:Input_widget | iw.content.t' = iw.content.t)&#13;
	Selectable_widget.selected.t' = Selectable_widget.selected.t&#13;
	Current_crud_op.operation.t' = Current_crud_op.operation.t&#13;
}&#13;
pred click_pre [aw: Action_widget, t: Time] {&#13;
	(aw in Update_trigger) =&gt; #Selectable_widget.selected.t = 1&#13;
	(aw in Delete_trigger) =&gt; #Selectable_widget.selected.t = 1&#13;
}&#13;
pred add [t, t': Time] {&#13;
	one o: Object_inlist |all iw: Input_widget | not(o in Selectable_widget.list.t) and o.appeared = t' and o.vs.iw = iw.content.t and Selectable_widget.list.t' = Selectable_widget.list.t+o&#13;
}&#13;
pred filled_required_test [t: Time] {&#13;
	all iw: Property_semantic.requireds| #iw.content.t = 1&#13;
}&#13;
pred unique_test [t: Time] {&#13;
	all iw: Property_semantic.uniques | all o: Selectable_widget.list.t | (#o.vs.iw= 1) =&gt; iw.content.t !=o.vs.iw&#13;
}&#13;
pred unique_for_update_test [t: Time] {&#13;
	all iw: Property_semantic.uniques | all o: (Selectable_widget.list.t-Selectable_widget.selected.t) | (#o.vs.iw= 1) =&gt; iw.content.t !=o.vs.iw&#13;
}&#13;
pred load_form [o: Object, t': Time] {&#13;
	all iw: Input_widget | iw.content.t' = o.vs.iw&#13;
}&#13;
pred update [t, t': Time] {&#13;
	one o: Object | all iw: Input_widget | not(o in Selectable_widget.list.t) and o.appeared = Selectable_widget.selected.t.appeared and o.vs.iw = iw.content.t and Selectable_widget.list.t' = (Selectable_widget.list.t - Selectable_widget.selected.t)+o&#13;
}&#13;
pred delete [t, t': Time] {&#13;
	Selectable_widget.list.t' = Selectable_widget.list.t - Selectable_widget.selected.t&#13;
}&#13;
&#13;
</semantics>
    <GUI>
        <window id="w8">
            <pos>486:186</pos>
            <rectangle>402:452</rectangle>
            <class>com._17od.upm.gui.AccountDialog</class>
            <title>Add Account</title>
            <modal>true</modal>
            <root>false</root>
            <action_widget id="aw61">
                <pos>741:306</pos>
                <rectangle>77:23</rectangle>
                <class>ButtonUI</class>
                <label>Generate</label>
            </action_widget>
            <action_widget id="aw62">
                <pos>628:597</pos>
                <rectangle>47:23</rectangle>
                <class>ButtonUI</class>
                <label>OK</label>
            </action_widget>
            <action_widget id="aw63">
                <pos>680:597</pos>
                <rectangle>65:23</rectangle>
                <class>ButtonUI</class>
                <label>Cancel</label>
            </action_widget>
            <input_widget id="iw17">
                <pos>570:226</pos>
                <rectangle>300:20</rectangle>
                <class>TextFieldUI</class>
                <descriptor>Account</descriptor>
                <value/>
            </input_widget>
            <input_widget id="iw18">
                <pos>570:266</pos>
                <rectangle>300:20</rectangle>
                <class>TextFieldUI</class>
                <descriptor>User Id</descriptor>
                <value/>
            </input_widget>
            <input_widget id="iw20">
                <pos>823:306</pos>
                <rectangle>47:23</rectangle>
                <class>CheckBoxUI</class>
                <label>Hide</label>
                <value>[options] 1 : 2</value>
            </input_widget>
            <input_widget id="iw19">
                <pos>570:307</pos>
                <rectangle>166:20</rectangle>
                <class>PasswordFieldUI</class>
                <descriptor>Password</descriptor>
                <value>yUZeJ7mS</value>
            </input_widget>
            <input_widget id="iw21">
                <pos>570:349</pos>
                <rectangle>300:20</rectangle>
                <class>TextFieldUI</class>
                <descriptor>URL</descriptor>
                <value/>
            </input_widget>
            <input_widget id="iw22">
                <pos>571:390</pos>
                <rectangle>298:184</rectangle>
                <class>TextAreaUI</class>
                <descriptor>Notes</descriptor>
                <value/>
            </input_widget>
        </window>
        <window id="w2">
            <pos>549:261</pos>
            <rectangle>276:302</rectangle>
            <class>com._17od.upm.gui.MainWindow</class>
            <title>C:\Users\usi\abtMyDocuments\upm_db - Universal Password Manager</title>
            <modal>false</modal>
            <root>false</root>
            <action_widget id="aw11">
                <pos>557:291</pos>
                <rectangle>0:0</rectangle>
                <class>MenuItemUI</class>
                <label>Database - New Database</label>
            </action_widget>
            <action_widget id="aw12">
                <pos>557:291</pos>
                <rectangle>0:0</rectangle>
                <class>MenuItemUI</class>
                <label>Database - Open Database</label>
            </action_widget>
            <action_widget id="aw13">
                <pos>557:291</pos>
                <rectangle>0:0</rectangle>
                <class>MenuItemUI</class>
                <label>Database - Open Database From URL</label>
            </action_widget>
            <action_widget id="aw14">
                <pos>557:291</pos>
                <rectangle>0:0</rectangle>
                <class>MenuItemUI</class>
                <label>Database - Sync with Remote Database</label>
            </action_widget>
            <action_widget id="aw15">
                <pos>557:291</pos>
                <rectangle>0:0</rectangle>
                <class>MenuItemUI</class>
                <label>Database - Change Master Password</label>
            </action_widget>
            <action_widget id="aw16">
                <pos>557:291</pos>
                <rectangle>0:0</rectangle>
                <class>MenuItemUI</class>
                <label>Database - Database Properties</label>
            </action_widget>
            <action_widget id="aw17">
                <pos>557:291</pos>
                <rectangle>0:0</rectangle>
                <class>MenuItemUI</class>
                <label>Database - Export</label>
            </action_widget>
            <action_widget id="aw18">
                <pos>557:291</pos>
                <rectangle>0:0</rectangle>
                <class>MenuItemUI</class>
                <label>Database - Import</label>
            </action_widget>
            <action_widget id="aw19">
                <pos>557:291</pos>
                <rectangle>0:0</rectangle>
                <class>MenuItemUI</class>
                <label>Database - Exit</label>
            </action_widget>
            <action_widget id="aw20">
                <pos>614:291</pos>
                <rectangle>0:0</rectangle>
                <class>MenuItemUI</class>
                <label>Account - Add Account</label>
            </action_widget>
            <action_widget id="aw21">
                <pos>614:291</pos>
                <rectangle>0:0</rectangle>
                <class>MenuItemUI</class>
                <label>Account - Edit Account</label>
            </action_widget>
            <action_widget id="aw22">
                <pos>614:291</pos>
                <rectangle>0:0</rectangle>
                <class>MenuItemUI</class>
                <label>Account - Delete Account</label>
            </action_widget>
            <action_widget id="aw23">
                <pos>614:291</pos>
                <rectangle>0:0</rectangle>
                <class>MenuItemUI</class>
                <label>Account - View Account</label>
            </action_widget>
            <action_widget id="aw24">
                <pos>614:291</pos>
                <rectangle>0:0</rectangle>
                <class>MenuItemUI</class>
                <label>Account - Copy Username</label>
            </action_widget>
            <action_widget id="aw25">
                <pos>614:291</pos>
                <rectangle>0:0</rectangle>
                <class>MenuItemUI</class>
                <label>Account - Copy Password</label>
            </action_widget>
            <action_widget id="aw26">
                <pos>667:291</pos>
                <rectangle>0:0</rectangle>
                <class>MenuItemUI</class>
                <label>Help - About</label>
            </action_widget>
            <action_widget id="aw3">
                <pos>558:313</pos>
                <rectangle>31:31</rectangle>
                <class>ButtonUI</class>
                <label/>
            </action_widget>
            <action_widget id="aw4">
                <pos>589:313</pos>
                <rectangle>31:31</rectangle>
                <class>ButtonUI</class>
                <label/>
            </action_widget>
            <action_widget id="aw5">
                <pos>620:313</pos>
                <rectangle>31:31</rectangle>
                <class>ButtonUI</class>
                <label/>
            </action_widget>
            <action_widget id="aw6">
                <pos>657:313</pos>
                <rectangle>31:31</rectangle>
                <class>ButtonUI</class>
                <label/>
            </action_widget>
            <action_widget id="aw7">
                <pos>688:313</pos>
                <rectangle>31:31</rectangle>
                <class>ButtonUI</class>
                <label/>
            </action_widget>
            <action_widget id="aw8">
                <pos>725:313</pos>
                <rectangle>31:31</rectangle>
                <class>ButtonUI</class>
                <label/>
            </action_widget>
            <action_widget id="aw9">
                <pos>762:313</pos>
                <rectangle>31:31</rectangle>
                <class>ButtonUI</class>
                <label/>
            </action_widget>
            <action_widget id="aw10">
                <pos>704:353</pos>
                <rectangle>17:17</rectangle>
                <class>ButtonUI</class>
                <label/>
            </action_widget>
            <input_widget id="iw2">
                <pos>576:352</pos>
                <rectangle>126:20</rectangle>
                <class>TextFieldUI</class>
                <value/>
            </input_widget>
            <selectable_widget id="sw1">
                <pos>559:378</pos>
                <rectangle>256:160</rectangle>
                <class>ListUI</class>
                <size>0</size>
                <selected>-1</selected>
            </selectable_widget>
        </window>
        <edge type="dynamic">
            <from>aw62</from>
            <to>w2</to>
        </edge>
        <edge type="static">
            <from>aw63</from>
            <to>w2</to>
        </edge>
        <edge type="static">
            <from>aw20</from>
            <to>w8</to>
        </edge>
        <edge type="dynamic">
            <from>aw21</from>
            <to>w8</to>
        </edge>
        <edge type="dynamic">
            <from>aw22</from>
            <to>w2</to>
        </edge>
    </GUI>
</instance_GUI_pattern>
